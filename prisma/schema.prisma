// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js" // La salida por defecto es node_modules/@prisma/client
}

datasource db {
  provider  = "postgresql"
  url       = env("PRISMA_DATABASE_URL") // URL con Prisma Accelerate (pooling)
  directUrl = env("POSTGRES_URL") // URL directa sin pooling
  relationMode = "foreignKeys" // Cambiado para permitir onDelete: Cascade
}

// 2. Modelo de Usuario (reemplaza a IUser)
model User {
  id         String        @id @default(cuid()) // CUID es un ID único y seguro
  nombre     String
  email      String        @unique
  password   String        // Contraseña hasheada
  rol        Role          @default(USUARIO)
  telefono   String? // El '?' lo hace opcional
  imagen     String?
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt

  // Relación: Un usuario puede tener muchas reservas
  reservations Reservation[]
}

// 3. Modelo de Habitación (reemplaza a IRoom)
model Room {
  id          String   @id @default(cuid()) // Cambiar a String con cuid()
  numero      Int      @unique
  tipo        String   // Cambiado a String para permitir capitalización personalizada
  precio      Float // Cambiado a Float para coincidir con la guía
  estado      RoomStatus @default(DISPONIBLE)
  capacidad   Int
  descripcion String?
  comodidades String[] // Array de comodidades (WiFi, TV, etc.)
  imagen      String?
  lat         Float? // Coordenadas para el mapa
  lng         Float?

  // Relación: Una habitación puede estar en muchas reservas
  reservations Reservation[]
}

// 4. Modelo de Reserva (reemplaza a IReservation)
model Reservation {
  id              String          @id @default(cuid()) // Cambiado a String con cuid()
  fechaEntrada    DateTime
  fechaSalida     DateTime
  huespedes       Int
  precioTotal     Float
  estado          ReservationStatus @default(PENDIENTE)
  pagado          Boolean         @default(false)
  notasEspeciales String?
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt

  // Relaciones con llaves foráneas
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  roomId String
  room   Room   @relation(fields: [roomId], references: [id], onDelete: Cascade)
}

// 5. Enums para tipos controlados (más seguro que strings)
enum Role {
  USUARIO
  OPERADOR
  ADMINISTRADOR
}

enum RoomStatus {
  DISPONIBLE
  RESERVADA
  OCUPADA
  MANTENIMIENTO
}

enum ReservationStatus {
  PENDIENTE
  CONFIRMADA
  CANCELADA
}
