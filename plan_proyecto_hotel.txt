# PLAN DE PROYECTO HOTEL (18 OCT - 12 NOV 2025) - VERSION POSTGRESQL

## DIVISION DETALLADA POR SEMANA (2 INTEGRANTES)

### SEMANA 1 (18-22 OCT): BASE DEL PROYECTO
**Integrante 1:**
- Crear proyecto Next.js (npx create-next-app)
- Configurar estructura de carpetas
- Diseñar schema de Prisma para Habitaciones
- Ejecutar `npx prisma generate` y `npx prisma db push`

**Integrante 2:**
- Configurar Vercel Postgres (crear base de datos en Vercel)
- Agregar modelos User y Reservation al schema de Prisma
- Instalar NextAuth (Google Auth)
- Configurar variables de entorno

### SEMANA 2 (25-29 OCT): INTERFAZ USUARIO
**Integrante 1:**
- Página listado habitaciones
- Componente Card por habitación
- Filtros básicos

**Integrante 2:**
- Formulario login/registro
- Página perfil usuario
- Formulario reserva básico

### SEMANA 3 (1-5 NOV): PANEL OPERADOR
**Integrante 1:**
- Mapa con Leaflet
- Marcadores de habitaciones
- Filtros para operador

**Integrante 2:**
- Tabla CRUD reservas
- Cambiar estados habitación
- Protección de rutas

### SEMANA 4 (8-12 NOV): INTEGRACIONES Y FINALIZACION
**Integrante 1:**
- Configurar Nodemailer
- Formulario contacto
- Notificaciones básicas

**Integrante 2:**
- Stripe Checkout
- Modo prueba con tarjetas
- Registrar pagos en DB

**Tareas Finales (Conjuntas):**
- Testing manual completo
- Ajustes responsive
- Deploy en Vercel
- Documentación README completa

## TECNOLOGIAS COMPLETAS

**Frontend:**
- Next.js 14 (React)
- Tailwind CSS (estilos)
- React-Bootstrap (componentes UI)
- Leaflet.js (mapas)
- Stripe.js (pagos)

**Backend:**
- Node.js
- Next.js API Routes
- NextAuth.js (autenticación)
- Prisma ORM (para PostgreSQL)

**Base de Datos:**
- Vercel Postgres (PostgreSQL cloud)
- Modelos Prisma:
  * User (usuarios)
  * Room (habitaciones)
  * Reservation (reservas)

**Herramientas:**
- Vercel (deploy)
- GitHub (control versión)
- Postman (test APIs)
- Nodemailer (emails)

**Dependencias clave:**
- @prisma/client (cliente de Prisma)
- prisma (dev - CLI de Prisma)
- react-icons
- date-fns (manejo fechas)
- react-hot-toast (notificaciones)
- react-leaflet (mapas)

## CONSEJOS PARA PRINCIPIANTES
1. Usar react-bootstrap para UI
2. Priorizar funcionalidad sobre diseño
3. Commits diarios a Git
4. Usar VSCode Live Share

## GUIA DE INSTALACION RAPIDA
1. Node.js v18+ (instalar desde nodejs.org)
2. Vercel cuenta (para Postgres y deploy)
3. VS Code con extensiones:
   - ESLint
   - Prettier
   - Prisma (oficial)

## SOLUCION DE PROBLEMAS COMUNES
- **Error de conexión DB**: Verificar POSTGRES_PRISMA_URL en .env.local
- **Error '@prisma/client'**: Ejecutar `npx prisma generate`
- **Tablas no existen**: Ejecutar `npx prisma db push`
- **Autenticación falla**: Revisar credenciales Google OAuth
- **Mapa no carga**: Añadir CSS de Leaflet en layout.tsx

## RECURSOS DE APRENDIZAJE
1. [Next.js Docs](https://nextjs.org/docs)
2. [Prisma Docs](https://www.prisma.io/docs)
3. [Vercel Postgres](https://vercel.com/docs/storage/vercel-postgres)
4. [Tailwind cheat Sheet](https://tailwindcomponents.com/cheatsheet/)
5. [Stripe Test Cards](https://stripe.com/docs/testing)

## CHECKLIST DE VERIFICACION SEMANAL
- [ ] Commits subidos a GitHub
- [ ] Variables de entorno en .env.local
- [ ] Schema de Prisma actualizado (`npx prisma db push`)
- [ ] Cliente de Prisma generado (`npx prisma generate`)

## RECOMENDACIONES ADICIONALES

### Para evitar bloqueos:
1. **Semana 1**: Configurar Vercel Postgres y ejecutar `npx prisma db push` ANTES de codear
2. **Semana 2**: Usar componentes pre-hechos (Tailwind) y validar con route /api/seed
3. **Semana 3**: Empezar con datos de prueba cargados con el seed

### Prioridades por sprint:
- **Must Have**: Login, CRUD reservas, mapa básico
- **Nice to Have**: Filtros avanzados, notificaciones

### Checklist Diario (2 personas):
1. Revisar merge de cambios en GitHub
2. Probar funcionalidades cruzadas (ej: reservas + mapa)
3. Documentar errores en README.md

### Tips para principiantes:
- Usar `npm run dev` en modo desarrollo
- Revisar la consola del navegador (F12) para depurar
- Dividir tareas en subtareas de 2-4 horas max